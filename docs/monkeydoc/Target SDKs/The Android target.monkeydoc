> The Android target

Android is Google's hugely popular cellphone and tablet OS.

>> You will need

* The [Android SDK](http://developer.android.com/sdk/index.html) - you only need the "SDK Tools" version, not the "Eclipse+ADT Plugin" one.

* [Java SE JDK](http://www.oracle.com/technetwork/java/javase/downloads/index.html). On Windows, make sure to grab the 32bit version even if you're running a 64bit OS.

* On Windows, you will also need [ANT](http://ant.apache.org/bindownload.cgi).

>> Notes

The `ANDROID_PATH` (Windows/MacOs), `JDK_PATH` (Windows) and `ANT_PATH` (Windows) vars in your [[Trans]] config file must be correctly set to use the android target.

The Android download is just a 'setup' app - after installation you will prompted to run the SDK manager, which you will need to do to install the actual android SDKs. Make sure to install at least "Android SDK Platform-tools" and "Android 3.2 (API 13) SDK Platform".

To run apps on real hardware on MacOS, you should be able to just 'plug and play'. Make sure to enable 'USB debugging' on the device first though.

To run apps on real hardware on Windows, you will need to install USB drivers. USB drivers from device manufacturers are generally the preferred solution, although they often tend to come bundled with nasty bloated 'virtual desktop' apps. With a bit of googling, you may be able to track down a plain USB driver for your device. If all else fails, you can try tweaking the Google USB driver - see below.

>> Tweaking the Google USB driver.

If you've had no luck installing manufacturer drivers, give this a try:

1) Install the 'official' Google USB driver via the SDK manager. If you can't see 'usb drivers' anywhere in the sdk manager, you may need to update the sdk manager itself first.

2) Look for your device in the 'android-sdk-windows/extras/google/usb_driver/android_winusb.inf file' - if it's there, the driver should work with your device.

3) If not, try adding your device to the driver. Use the device manager to find your device's 'Hardware Id' (somewhere in device->properties), and create new entries in the .inf file using this id. Note: You apparently only need the USB_VID_XXXX&PID_YYYY bits of the id.

The following devices seem to work OK with the Google USB driver:

<pre>
;Acer ICONIA TAB A200
%SingleAdbInterface%        = USB_Install, USB\VID_0502&PID_337C
%CompositeAdbInterface%     = USB_Install, USB\VID_0502&PID_337C&MI_01
</pre>

I have been unable to get these devices working with the Google USB driver:

* LG-P500

>> Trouble shooting:

Q. I get "Debug Certificate expired" error when compiling.

A. rm ~/.android/debug.keystore (MacOS) or delete C:\\User\\you_user_name\\.android\\debug.keystore (Windows 7).
